Given an integer array nums, find the contiguous subarray (containing at least one number)
which has the largest sum and return its sum.

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
Example 2:

Constraints:

1 <= nums.length <= 3 * 104
-105 <= nums[i] <= 105


SOLUTION:
______________________________________________________________________________________________________________________________
class Solution {
    public int maxSubArray(int[] nums) {
        int sum=0, max=nums[0],size=nums.length;
        for(int i=0;i<size;i++)
        {
            sum+=nums[i];
            
            if(sum>max)
                max=sum;
            
            if(sum<0)
                sum=0;
        }
        return max;
        
    }
    
    //main function
    
    public static void main(String[] args) {
    int nums[] = {-2,1,-3,4,-1,2,1,-5,4};
    System.out.println(findMaxSubarraySum(nums));
  }
    
    
}

______________________________________________________________________________________________________________________________
Input
[-2,1,-3,4,-1,2,1,-5,4]
Output
6
